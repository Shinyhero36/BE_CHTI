


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000                 include          DriverJeuLaser.inc
    1 00000000         
    2 00000000         ; Bibliotheque DriverJeuLaser (ancienne gassp72 adaptée 
                       2021 - TR)
    3 00000000         ; Accès en aux fonctions suivantes :
    4 00000000         ; GPIO :
    5 00000000         ; GPIOA_Set(char Broche), GPIOB_Set(char Broche), GPIOC_
                       Set(char Broche)
    6 00000000         ; GPIOA_Clear(char Broche), GPIOB_Clear(char Broche), GP
                       IOC_Clear(char Broche)
    7 00000000         
    8 00000000         ; PWM :
    9 00000000         ;/**
   10 00000000         ; * @brief  Fixe une valeur de PWM, Val, en tick horloge
                       . La rapport cyclique effectif
   11 00000000         ; * est donc : rcy = Thaut_ticks / Periode_ticks
   12 00000000         ; * @note   spécifique Jeu Laser, PWM liée exclusivement
                        au TIM3, chan3
   13 00000000         ; * @param  Thaut_ticks : durée de l'état haut d'une imp
                       ulsion en Ticks
   14 00000000         ;  * @retval None
   15 00000000         ; */
   16 00000000         
   17 00000000         ;void PWM_Set_Value_TIM3_Ch3( unsigned short int Thaut_t
                       icks);
   18 00000000                 import           PWM_Set_Value_TIM3_Ch3
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;/**
   23 00000000         ; * @brief  Mise à 1 d'une broche GPIO 
   24 00000000         ;  * @note   Une fonction par GPIO
   25 00000000         ; * @param  Broche : 0 à 15
   26 00000000         ; * @retval None
   27 00000000         ; */
   28 00000000         
   29 00000000         ;void GPIOA_Set(char Broche);
   30 00000000                 import           GPIOA_Set
   31 00000000         
   32 00000000         ;void GPIOB_Set(char Broche);
   33 00000000                 import           GPIOB_Set
   34 00000000         
   35 00000000         ;void GPIOC_Set(char Broche);
   36 00000000                 import           GPIOC_Set
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;/**
   41 00000000         ; * @brief  Mise à 0 d'une broche GPIO 
   42 00000000         ;  * @note   Une fonction par GPIO
   43 00000000         ; * @param  Broche : 0 à 15
   44 00000000         ; * @retval None
   45 00000000         ;  */
   46 00000000         
   47 00000000         ;void GPIOA_Clear(char Broche);
   48 00000000                 import           GPIOA_Clear
   49 00000000         



ARM Macro Assembler    Page 2 


   50 00000000         ;void GPIOB_Clear(char Broche);
   51 00000000                 import           GPIOB_Clear
   52 00000000         
   53 00000000         ;void GPIOC_Clear(char Broche);
   54 00000000                 import           GPIOC_Clear
   55 00000000         
   56 00000000                 end
    4 00000000                 import           LongueurSon
    5 00000000                 import           Son
    6 00000000                 export           SortieSon
    7 00000000                 export           TableIndex
    8 00000000         
    9 00000000         
   10 00000000         ; ====================== zone de réservation de données,
                         ======================================
   11 00000000         ;Section RAM (read only) :
   12 00000000                 area             mesdata,data,readonly
   13 00000000         
   14 00000000         
   15 00000000         ;Section RAM (read write):
   16 00000000                 area             maram,data,readwrite
   17 00000000 00000000 
                       TableIndex
                               dcd              0
   18 00000004 00 00   SortieSon
                               dcw              0
   19 00000006         
   20 00000006         
   21 00000006         
   22 00000006         ; ======================================================
                       =========================================
   23 00000006         
   24 00000006         
   25 00000006         
   26 00000006         
   27 00000006         ;Section ROM code (read only) :  
   28 00000006                 area             moncode,code,readonly
   29 00000000         ; écrire le code ici  
   30 00000000         
   31 00000000         
   32 00000000         
   33 00000000                 EXPORT           CallbackSon
   34 00000000         
   35 00000000         ; void CallbackSon_VertionC(){
   36 00000000         CallbackSon
                               proc
   37 00000000         ;  if (LongueurSon > TableIndex){
   38 00000000 4A0C            ldr              r2, =TableIndex ;R0 ... - R1 ..
                                                            . - R2 ... - R3 ...
                                                            
   39 00000002 6811            ldr              r1, [r2]    ;R0 ... - R1 ... - 
                                                            R2 &TI - R3 ...
   40 00000004 480C            ldr              r0, =LongueurSon ;R0 ... - R1  
                                                            TI - R2 &TI - R3 ..
                                                            .
   41 00000006 6800            ldr              r0, [r0]    ;R0 &LS - R1  TI - 
                                                            R2 &TI - R3 ...
   42 00000008 4288            cmp              r0, r1      ;R0  LS - R1  TI - 
                                                            R2 &TI - R3 ...



ARM Macro Assembler    Page 3 


   43 0000000A DD12            ble              FinCallbackSon
   44 0000000C         ;   int NoteSon = (&Son)[TableIndex];
   45 0000000C 4B0B            ldr              r3, =Son    ;R0 ... - R1  TI - 
                                                            R2 &TI - R3 ...
   46 0000000E F933 0011       ldrsh            r0, [r3, r1, lsl #1] ;R0 ... - 
                                                            R1  TI - R2 &TI - R
                                                            3 &SO
   47 00000012         ;   TableIndex++;
   48 00000012 F101 0101       add              r1, #1      ;R0  NS - R1  TI - 
                                                            R2 &TI - R3 ...
   49 00000016 6011            str              r1,[r2]     ;R0  NS - R1  TI - 
                                                            R2 &TI - R3 ...
   50 00000018         ;   NoteSon += 32768;
   51 00000018 F500 4000       add              r0, #32768  ;R0  NS - R1 ... - 
                                                            R2 ... - R3 ...
   52 0000001C         ;   NoteSon /= 91;
   53 0000001C F04F 015B       mov              r1, #91     ;R0  NS - R1 ... - 
                                                            R2 ... - R3 ...
   54 00000020 FBB0 F0F1       udiv             r0, r1      ;R0  NS - R1 #92 - 
                                                            R2 ... - R3 ...
   55 00000024         ;   SortieSon = NoteSon;
   56 00000024 4906            ldr              r1, =SortieSon ;R0  NS - R1 ...
                                                             - R2 ... - R3 ...
   57 00000026 6008            str              r0, [r1]    ;R0  NS - R1 &SS - 
                                                            R2 ... - R3 ...
   58 00000028         ;   PWM_Set_Value_TIM3_Ch3(NoteSon);
   59 00000028 B500            push             {lr}        ;R0  NS - R1 ... - 
                                                            R2 ... - R3 ...
   60 0000002A F7FF FFFE       bl               PWM_Set_Value_TIM3_Ch3 ;R0  NS 
                                                            - R1 ... - R2 ... -
                                                             R3 ...
   61 0000002E F85D EB04       pop              {lr}        ;R0 ... - R1 ... - 
                                                            R2 ... - R3 ...
   62 00000032         ;  }
   63 00000032         ; }
   64 00000032         FinCallbackSon
   65 00000032 4770            bx               lr
   66 00000034                 endp
   67 00000034                 END
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\gestionson.d -o.\obj\gestionson.o -I.\Driver -I.\RTE\_Simu -
IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Programd
ata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 534
" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --predefine="_RT
E_ SETA 1" --list=gestionson.lst Src\GestionSon.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdata 00000000

Symbol: mesdata
   Definitions
      At line 12 in file Src\GestionSon.s
   Uses
      None
Comment: mesdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SortieSon 00000004

Symbol: SortieSon
   Definitions
      At line 18 in file Src\GestionSon.s
   Uses
      At line 6 in file Src\GestionSon.s
      At line 56 in file Src\GestionSon.s

TableIndex 00000000

Symbol: TableIndex
   Definitions
      At line 17 in file Src\GestionSon.s
   Uses
      At line 7 in file Src\GestionSon.s
      At line 38 in file Src\GestionSon.s

maram 00000000

Symbol: maram
   Definitions
      At line 16 in file Src\GestionSon.s
   Uses
      None
Comment: maram unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CallbackSon 00000000

Symbol: CallbackSon
   Definitions
      At line 36 in file Src\GestionSon.s
   Uses
      At line 33 in file Src\GestionSon.s
Comment: CallbackSon used once
FinCallbackSon 00000032

Symbol: FinCallbackSon
   Definitions
      At line 64 in file Src\GestionSon.s
   Uses
      At line 43 in file Src\GestionSon.s
Comment: FinCallbackSon used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 28 in file Src\GestionSon.s
   Uses
      None
Comment: moncode unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIOA_Clear 00000000

Symbol: GPIOA_Clear
   Definitions
      At line 48 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Clear unused
GPIOA_Set 00000000

Symbol: GPIOA_Set
   Definitions
      At line 30 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Set unused
GPIOB_Clear 00000000

Symbol: GPIOB_Clear
   Definitions
      At line 51 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Clear unused
GPIOB_Set 00000000

Symbol: GPIOB_Set
   Definitions
      At line 33 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Set unused
GPIOC_Clear 00000000

Symbol: GPIOC_Clear
   Definitions
      At line 54 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Clear unused
GPIOC_Set 00000000

Symbol: GPIOC_Set
   Definitions
      At line 36 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Set unused
LongueurSon 00000000

Symbol: LongueurSon
   Definitions
      At line 4 in file Src\GestionSon.s
   Uses
      At line 40 in file Src\GestionSon.s
Comment: LongueurSon used once
PWM_Set_Value_TIM3_Ch3 00000000

Symbol: PWM_Set_Value_TIM3_Ch3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 18 in file .\Driver\DriverJeuLaser.inc
   Uses
      At line 60 in file Src\GestionSon.s
Comment: PWM_Set_Value_TIM3_Ch3 used once
Son 00000000

Symbol: Son
   Definitions
      At line 5 in file Src\GestionSon.s
   Uses
      At line 45 in file Src\GestionSon.s
Comment: Son used once
9 symbols
353 symbols in table
